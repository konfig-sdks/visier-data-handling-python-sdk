# coding: utf-8

"""
    Visier Data and Job Handling APIs

    Visier APIs for data and job handling

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from visier_data_handling_python_sdk.pydantic.start_extraction_model_tenants import StartExtractionModelTenants

class StartExtractionModel(BaseModel):
    tenants: typing.Optional[StartExtractionModelTenants] = Field(None, alias='tenants')

    # If \"true\", one extraction job is dispatched for each accessible analytic tenant.
    all_tenants: typing.Optional[bool] = Field(None, alias='allTenants')

    # The time from which to extract data.
    override_last_extraction_timestamp: typing.Optional[str] = Field(None, alias='overrideLastExtractionTimestamp')

    # If \"true\", the generated data load artifacts are published to Production immediately.
    publish_data_load_artifacts: typing.Optional[bool] = Field(None, alias='publishDataLoadArtifacts')

    # If \"true\", a processing job is spawned after a dispatched extraction job runs successfully.
    run_processing_job: typing.Optional[bool] = Field(None, alias='runProcessingJob')

    # The unique identifier of the data category on which to trigger the extraction job.
    data_category_id: typing.Optional[str] = Field(None, alias='dataCategoryId')

    # If \"true\", the job does not generate data load artifacts. If unspecified, the default is \"false\".
    disable_artifact_generation: typing.Optional[bool] = Field(None, alias='disableArtifactGeneration')
    class Config:
        arbitrary_types_allowed = True
