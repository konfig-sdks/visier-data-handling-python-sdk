# coding: utf-8

"""
    Visier Data and Job Handling APIs

    Visier APIs for data and job handling

    The version of the OpenAPI document: 22222222.99201.1200
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from visier_data_handling_python_sdk import schemas  # noqa: F401


class JobCancellationResultDTO(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            tenantCode = schemas.StrSchema
            jobId = schemas.StrSchema
            jobType = schemas.StrSchema
            parentJobId = schemas.StrSchema
            
            
            class cancelStatus(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    format = 'enum'
                    enum_value_to_name = {
                        "CANCEL_FAILED": "FAILED",
                        "CANCEL_SUCCEEDED": "SUCCEEDED",
                    }
                
                @schemas.classproperty
                def FAILED(cls):
                    return cls("CANCEL_FAILED")
                
                @schemas.classproperty
                def SUCCEEDED(cls):
                    return cls("CANCEL_SUCCEEDED")
            jobStatus = schemas.StrSchema
            message = schemas.StrSchema
            __annotations__ = {
                "tenantCode": tenantCode,
                "jobId": jobId,
                "jobType": jobType,
                "parentJobId": parentJobId,
                "cancelStatus": cancelStatus,
                "jobStatus": jobStatus,
                "message": message,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tenantCode"]) -> MetaOapg.properties.tenantCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobId"]) -> MetaOapg.properties.jobId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobType"]) -> MetaOapg.properties.jobType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["parentJobId"]) -> MetaOapg.properties.parentJobId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cancelStatus"]) -> MetaOapg.properties.cancelStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobStatus"]) -> MetaOapg.properties.jobStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["message"]) -> MetaOapg.properties.message: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["tenantCode", "jobId", "jobType", "parentJobId", "cancelStatus", "jobStatus", "message", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tenantCode"]) -> typing.Union[MetaOapg.properties.tenantCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobId"]) -> typing.Union[MetaOapg.properties.jobId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobType"]) -> typing.Union[MetaOapg.properties.jobType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["parentJobId"]) -> typing.Union[MetaOapg.properties.parentJobId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cancelStatus"]) -> typing.Union[MetaOapg.properties.cancelStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobStatus"]) -> typing.Union[MetaOapg.properties.jobStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["message"]) -> typing.Union[MetaOapg.properties.message, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["tenantCode", "jobId", "jobType", "parentJobId", "cancelStatus", "jobStatus", "message", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        tenantCode: typing.Union[MetaOapg.properties.tenantCode, str, schemas.Unset] = schemas.unset,
        jobId: typing.Union[MetaOapg.properties.jobId, str, schemas.Unset] = schemas.unset,
        jobType: typing.Union[MetaOapg.properties.jobType, str, schemas.Unset] = schemas.unset,
        parentJobId: typing.Union[MetaOapg.properties.parentJobId, str, schemas.Unset] = schemas.unset,
        cancelStatus: typing.Union[MetaOapg.properties.cancelStatus, str, schemas.Unset] = schemas.unset,
        jobStatus: typing.Union[MetaOapg.properties.jobStatus, str, schemas.Unset] = schemas.unset,
        message: typing.Union[MetaOapg.properties.message, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'JobCancellationResultDTO':
        return super().__new__(
            cls,
            *args,
            tenantCode=tenantCode,
            jobId=jobId,
            jobType=jobType,
            parentJobId=parentJobId,
            cancelStatus=cancelStatus,
            jobStatus=jobStatus,
            message=message,
            _configuration=_configuration,
            **kwargs,
        )
